/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/src/js/LinkMaster.js":
/*!*****************************************!*\
  !*** ./src/assets/src/js/LinkMaster.js ***!
  \*****************************************/
/***/ (() => {

eval("LinkMaster = {};\nLinkMaster.Tabs = Garnish.Base.extend({\n  $container: null,\n  $tablist: null,\n  $firstTab: null,\n  $lastTab: null,\n  $selectedTab: null,\n  $focusableTab: null,\n  init: function init(container) {\n    var _this = this;\n\n    this.$container = $(container);\n    this.$tablist = this.$container.find('> [role=\"tablist\"]:first');\n    this.$tabs = this.$tablist.find('> [role=\"tab\"]');\n    this.$firstTab = this.$tabs.first();\n    this.$lastTab = this.$tabs.last();\n    this.$selectedTab = this.$tabs.filter('.sel:first');\n    this.$focusableTab = this.$tabs.filter('[tabindex=0]:first');\n\n    if (this.$container.data('tabs')) {\n      console.warn('Double-instantiation a tab manager on an element');\n      this.$container.data('tabs').destroy();\n    }\n\n    this.$container.data('tabs', this);\n\n    for (var i = 0; i < this.$tabs.length; i++) {\n      var $a = this.$tabs.eq(i);\n      var href = $a.attr('href');\n\n      if (href && href.charAt(0) === '#') {\n        this.addListener($a, 'click', function (ev) {\n          ev.preventDefault();\n\n          _this.selectTab(ev.currentTarget);\n        });\n      }\n    }\n  },\n  selectTab: function selectTab(tab) {\n    var $tab = this._getTab(tab);\n\n    if ($tab[0] === this.$selectedTab[0]) {\n      return;\n    }\n\n    this.deselectTab();\n    this.$selectedTab = $tab.addClass('sel').attr('aria-selected', 'true');\n    this.makeTabFocusable($tab);\n    $tab.focus();\n    this.scrollToTab($tab);\n    this.trigger('selectTab', {\n      $tab: $tab\n    });\n  },\n  deselectTab: function deselectTab() {\n    var $tab = this.$selectedTab.removeClass('sel').attr('aria-selected', 'false');\n    this.$selectedTab = null;\n    this.trigger('deselectTab', {\n      $tab: $tab\n    });\n  },\n  makeTabFocusable: function makeTabFocusable(tab) {\n    var $tab = this._getTab(tab);\n\n    if ($tab[0] === this.$focusableTab[0]) {\n      return;\n    }\n\n    this.$focusableTab.attr('tabindex', '-1');\n    this.$focusableTab = $tab.attr('tabindex', '0');\n  },\n  scrollToTab: function scrollToTab(tab) {\n    var $tab = this._getTab(tab);\n\n    var scrollLeft = this.$tablist.scrollLeft();\n    var tabOffset = $tab.offset().left;\n    var elemScrollOffset = tabOffset - this.$tablist.offset().left;\n    var targetScrollLeft = false;\n\n    if (elemScrollOffset < 0) {\n      targetScrollLeft = scrollLeft + elemScrollOffset - 24;\n    } else {\n      var tabWidth = $tab.outerWidth();\n      var ulWidth = this.$tablist.prop('clientWidth');\n\n      if (elemScrollOffset + tabWidth > ulWidth) {\n        targetScrollLeft = scrollLeft + (elemScrollOffset - (ulWidth - tabWidth)) + 24;\n      }\n    }\n\n    if (targetScrollLeft !== false) {\n      this.$tablist.scrollLeft(targetScrollLeft);\n    }\n  },\n  _getTab: function _getTab(tab) {\n    if (tab instanceof jQuery) {\n      return tab;\n    }\n\n    if (tab instanceof HTMLElement) {\n      return $(tab);\n    }\n\n    if (typeof tab !== 'string') {\n      throw 'Invalid tab ID';\n    }\n\n    var $tab = this.$tabs.filter(\"[data-id\\\"\".concat(tab, \"\\\"]\"));\n\n    if (!$tab.length) {\n      throw \"Invalid tab ID: \".concat(tab);\n    }\n\n    return $tab;\n  },\n  destroy: function destroy() {\n    this.$container.removeData('tabs');\n    this.base();\n  }\n});\nInlineSelector = Garnish.Base.extend({\n  $container: null,\n  $trigger: null,\n  $dropdownContainer: null,\n  input: null,\n  selectedValue: null,\n  selectedLabel: null,\n  init: function init(container) {\n    this.$container = $(container);\n    this.$trigger = this.$container.find('.selected-value');\n    this.$dropdownContainer = this.$container.find('.drop-items');\n    this.input = this.$container.find('input:first');\n    this.updateSelectedValue();\n    this.addListener(this.$trigger, 'click', this.openDropdown);\n    this.addListener(this.$dropdownContainer, 'click', this.hideDropdown);\n  },\n  updateSelectedValue: function updateSelectedValue() {\n    this.selectedValue = this.$container.data('selected-value');\n    this.selectedLabel = this.$container.data('selected-label');\n    this.$trigger.html(this.selectedLabel);\n    this.$trigger.data('label', this.selectedLabel);\n    this.$trigger.data('value', this.selectedValue);\n    this.input.val(this.selectedValue);\n  },\n  openDropdown: function openDropdown() {\n    if (this.$dropdownContainer.hasClass('show')) {\n      this.$dropdownContainer.removeClass('show');\n    } else {\n      this.$dropdownContainer.addClass('show');\n    }\n  },\n  hideDropdown: function hideDropdown(e) {\n    var $selected = $(e.target);\n    this.$container.data('selected-value', $selected.data('value'));\n    this.$container.data('selected-label', $selected.data('label'));\n    this.$container.attr('data-selected-value', $selected.data('value'));\n    this.$container.attr('data-selected-label', $selected.data('label'));\n    this.updateSelectedValue();\n    this.$dropdownContainer.removeClass('show');\n  }\n});\nLinkMaster.Link = Garnish.Base.extend({\n  $container: null,\n  // Tabs\n  tabManager: null,\n  // Type\n  type: null,\n  $typeInput: null,\n  $typeSelectMenuTrigger: null,\n  $typeSelectMenuLinks: null,\n  $typeSelectMenu: null,\n  isTypeExpanded: false,\n  // Template\n  $templateFieldWrapper: null,\n  $templateEnableSwitch: null,\n  // Attributes\n  init: function init(id) {\n    this.$container = $(\"#fields-\".concat(id, \"-field\")); // Tabs\n\n    var $tabs = $('#fields-link-master-tabs');\n    this.tabManager = new LinkMaster.Tabs($tabs);\n    this.tabManager.on('selectTab', this.selectTab);\n    this.tabManager.on('deselectTab', this.deselectTab); // Type\n\n    this.$typeInput = $('#fields-website-link-type');\n    this.$typeSelectMenuTrigger = $('.link-field-type__current');\n    this.$typeSelectMenuLinks = $('.link-field-type__link');\n    this.$typeSelectMenu = $('.link-field-type__menu');\n    this.addListener(this.$typeSelectMenuTrigger, 'click', this._showTypeMenu);\n    this.addListener(this.$typeSelectMenuLinks, 'click', this.handleTypeLinkClick);\n    this.addListener(Garnish.$doc, 'click', this.handleOutsideMenuClick); // Template\n\n    this.$templateFieldWrapper = $('#fields-lm-tab-template .template-field-wrapper');\n    this.$templateEnableSwitch = $('#fields-website-enable-template').data('lightswitch');\n    this.addListener(this.$templateEnableSwitch.$outerContainer, 'change', this.handleTemplateEnabled); // Inline Dropdowns\n\n    $.each(this.$container.find('.inline-selector'), function (i, el) {\n      new InlineSelector(el);\n    });\n    this.checkLinkType();\n  },\n  // TODO: FIX TYPE MENU DROPDOWNS\n  handleOutsideMenuClick: function handleOutsideMenuClick(event) {\n    var newTarget = event.target;\n    var triggerButton = $(newTarget).closest('.link-field-type__link').length > 0;\n    console.log(triggerButton);\n\n    if (this.isTypeExpanded) {\n      if (triggerButton) {\n        return;\n      } else {\n        this._showTypeMenu();\n      }\n    } else {\n      return;\n    }\n  },\n  selectTab: function selectTab(ev) {\n    var href = ev.$tab.attr('href');\n\n    if (href.charAt(0) === '#') {\n      $(href).removeClass('hidden');\n    }\n\n    Garnish.$win.trigger('resize');\n    Garnish.$doc.trigger('scroll');\n\n    if (typeof history !== 'undefined') {\n      Garnish.requestAnimationFrame(function () {\n        history.replaceState(undefined, undefined, href);\n      });\n    }\n  },\n  deselectTab: function deselectTab(ev) {\n    if (ev.$tab.attr('href').charAt(0) === '#') {\n      $(ev.$tab.attr('href')).addClass('hidden');\n    }\n  },\n  handleTypeOpen: function handleTypeOpen() {\n    this._showTypeMenu();\n  },\n  handleTypeLinkClick: function handleTypeLinkClick(event) {\n    this.$typeSelectMenuLinks.removeClass('selected');\n    var $type = $(event.target);\n    $type.addClass('selected');\n    this.type = $type.data('value');\n    this.$typeInput.val(this.type);\n\n    this._hideTypeMenu();\n  },\n  handleTemplateEnabled: function handleTemplateEnabled() {\n    if (this.$templateEnableSwitch.on) {\n      this.$templateFieldWrapper.addClass('activated');\n    } else {\n      this.$templateFieldWrapper.removeClass('activated');\n    }\n  },\n  checkLinkType: function checkLinkType() {\n    this.type = 'custom';\n\n    this._updateLinkInputUi();\n  },\n  _updateLinkInputUi: function _updateLinkInputUi() {\n    this.$typeSelectMenuTrigger.find('.current-type').html(this.type);\n    console.log('change input type to: ', this.type);\n  },\n  _showTypeMenu: function _showTypeMenu() {\n    this.$typeSelectMenu.show();\n    this.isTypeExpanded = true;\n  },\n  _hideTypeMenu: function _hideTypeMenu() {\n    this.$typeSelectMenu.hide();\n    this.isTypeExpanded = false;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assets/src/js/LinkMaster.js\n");

/***/ }),

/***/ "./src/assets/src/scss/LinkMaster.scss":
/*!*********************************************!*\
  !*** ./src/assets/src/scss/LinkMaster.scss ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXRzL3NyYy9zY3NzL0xpbmtNYXN0ZXIuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saW5rbWFzdGVyLy4vc3JjL2Fzc2V0cy9zcmMvc2Nzcy9MaW5rTWFzdGVyLnNjc3M/YmM4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/assets/src/scss/LinkMaster.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/src/assets/dist/js/LinkMaster": 0,
/******/ 			"src/assets/dist/css/LinkMaster": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunklinkmaster"] = self["webpackChunklinkmaster"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["src/assets/dist/css/LinkMaster"], () => (__webpack_require__("./src/assets/src/js/LinkMaster.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["src/assets/dist/css/LinkMaster"], () => (__webpack_require__("./src/assets/src/scss/LinkMaster.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;